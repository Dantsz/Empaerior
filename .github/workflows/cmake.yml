name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
 job:
    name: ${{ matrix.os }}-${{ github.workflow }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        include:
          - os: ubuntu-latest
            vcpkgCommitId: '5568f110b509a9fd90711978a7cb76bae75bb092'
    steps:
    - uses: actions/checkout@v2
    
    - uses: humbletim/setup-vulkan-sdk@v1.0.3   
    - name: reps
      run : sudo add-apt-repository -y "deb http://archive.ubuntu.com/ubuntu `lsb_release -sc` main universe restricted multiverse"
  
    
    
    - name: update
      run: sudo apt-get update -y -qq
    - name: install clang
      run: sudo apt-get install clang

    - name: set clang as default
      run: sudo update-alternatives --config c++#bad
  
    - name: get vcpkg
      run: git clone https://github.com/Microsoft/vcpkg.git ${{github.workspace }}/vcpkg
    - name: bootstrapvcpkg
      run: sudo ${{ github.workspace }}/vcpkg/bootstrap-vcpkg.sh
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake  -B ${{github.workspace }}/build -S . -DCMAKE_TOOLCHAIN_FILE='${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake' -G Ninja
   
       
    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build 

    #- name: Test
     # working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      #run: ctest -C ${{env.BUILD_TYPE}}
      
